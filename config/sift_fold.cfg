# Run acceleration searches on dedispersed timeseries. Also, sift through candidates and output prepfold plots.

[data]
# Glob string to parse accelsearch candidate files (*_ACCEL_<zmax>_JERK_<wmax>) at ACCEL_DIR. Ensure that .inf files are present in the same directory.
glob_accel = guppi_58738_*_A00_0031_rmed0.25_DM*_ACCEL_500_JERK_1080
# Path to above .fft files. Accelsearch outputs are also written this path.
ACCEL_DIR = /ocean/projects/phy210030p/akshay2/BLGC/Rmed/A00_58738_0031

[folding]
fold_basename = A00_58738_0031 ; Shorter than 12 characters preferably
FOLD_DIR = /ocean/projects/phy210030p/akshay2/BLGC/TS_fold/A00_58738_0031 ; Path to which folded timeseries products must be written
# A separate sub-directory is created for each unique (zmax, wmax) tuple.

# Default sifting parameters are taken from the PRESTO script ACCEL_sift.py.
[sifting]
# What wass the maximum number of harmonics summed during accelsearch?
numharm =   ; (d: 8)
# In how many DMs must a candidate be detected to be considered "good"?
min_num_DMs = ; (d: 2)
# Lowest DM to consider as a "real" pulsar
low_DM_cutoff = 30.0 ; (d: 2.0)
# Ignore candidates with a sigma (from incoherent power summation) less than this.
sigma_threshold = 7.0 ; (d: 4.0)
# Ignore candidates with a coherent power less than this.
c_pow_threshold = ; (d: 100.0)
# How close (in Fourier bins) does a candidate have to be to another candidate to consider both as the same?
r_err = ; (d: 1.1)
# Shortest period (s) candidates to consider
P_min = ; (d: 0.0005)
# Longest period (s) candidates to consider
P_max = ; (d: 30.0)
# Ignore any candidates where at least one harmonic does exceed this power.
harm_pow_cutoff = ; (d: 8.0)
# If the birds file works well for zapping, the following shouldn't be needed at all.
# If they are required, add tuples with the bad values and their errors.
known_birds_p = [] ; (ms, err)
known_birds_f = [] ; (Hz, err)
